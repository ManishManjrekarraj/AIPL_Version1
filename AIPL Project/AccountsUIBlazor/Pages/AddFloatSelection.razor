@page "/AddFloatSelection"

@using Accounts.Models.UIModels
@using System.Net.Http;
@using System.Text;
@using System.Text.Json;
@inject HttpClient HttpClient;
@inject NavigationManager navigationManager;


<h3>AddFloatSelection</h3>

<EditForm Model="UIFloatSelection" OnValidSubmit="ValidSubmit">
    <div class="row">

        <div class="row" style="margin-top:10px">
            <div class="col-md-12">
                <select @bind="UIFloatSelection.FloatCategoryId" class="form-select">
                    <option value="">-- Select Type of Float --</option>
                    @foreach (var category in FloatCategories)
                    {
                        <option value="@category.FloatCategoryId">@category.FloatCategory</option>
                    }
                </select>
            </div>
        </div>
        <div class="row" style="margin-top:10px">
            <div class="col-md-12">
                <label for="itemName1">Item Name 1</label>
                <input type="text" class="form-control" id="itemName1" @bind-value="@UIFloatSelection.CategoryItems" placeholder="enter item name..." />
            </div>
        </div>
        <div class="row" style="margin-top:10px">
            <div class="col-md-12">
                <label for="itemName2">Item Name 2</label>
                <input type="text" class="form-control" id="itemName2" @bind-value="@UIFloatSelection.FloatCategory" placeholder="enter item name..." />
            </div>
        </div>
        <div class="row" style="margin-top:10px">
            <div class="col-md-12">
                <label for="itemName3">Item Name 3</label>
                <input type="text" class="form-control" id="itemName3" @bind-value="@UIFloatSelection.ItemId" placeholder="enter item name..." />
            </div>
        </div>
        <div class="row" style="margin-top:10px">
            <div class="col-md-12">
                <label for="itemName4">Item Name 4</label>
                <input type="text" class="form-control" id="itemName4" @bind-value="@UIFloatSelection.FloatCategoryId" placeholder="enter item name..." />
            </div>
        </div>

        <button type="submit" class="btn btn-primary" Style="margin-top:10px">Add</button>


    </div>
</EditForm>

<div class="row mt-2">
    <h4>Chain Constants Details</h4>
    <div class="col-md-12">
        <RadzenDataGrid @ref="floatSelectionGrid" AllowAlternatingRows="false" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true" EditMode="DataGridEditMode.Single"
        Data="@floatSelectionList" TItem="UIFloatSelection" ColumnWidth="200px">
            <Columns>
                <RadzenDataGridColumn TItem="UIFloatSelection" Property="CategoryItems" Title="CategoryItems" Width="120px" />

                <RadzenDataGridColumn TItem="UIFloatSelection" Property="FloatCategory" Title="FloatCategory" Width="120px" />

                <RadzenDataGridColumn TItem="UIFloatSelection" Property="ItemId" Title="ItemId" Width="120px" />

                <RadzenDataGridColumn TItem="UIFloatSelection" Property="FloatCategoryId" Title="FloatCategoryId" Width="120px" />

            </Columns>
        </RadzenDataGrid>
    </div>
</div>

@code {

    public List<UIFloatCategory> FloatCategories = new();

    public UIFloatSelection UIFloatSelection { get; set; } = new();

    public UIFloatSelection uifloatselection;

    // for radzen grid
    RadzenDataGrid<UIFloatSelection> floatSelectionGrid;
    private List<UIFloatSelection> floatSelectionList = new List<UIFloatSelection>();

    protected override async Task OnInitializedAsync()
    {
        await LoadFloatSelectionDetails();
        await LoadAllCategoriesDetails();
    }

    public async Task LoadFloatSelectionDetails()
    {
        try
        {
            floatSelectionList = await HttpClient.GetFromJsonAsync<List<UIFloatSelection>>("FloatSelection/GetAllFloatSelections");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading float selections: {ex.Message}");
        }
    }

    public async Task LoadAllCategoriesDetails()
    {
        try
        {
            FloatCategories = await HttpClient.GetFromJsonAsync<List<UIFloatCategory>>($"FloatCategory/GetAllCategories");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching all Categories: {ex.Message}");
        }
    }

    public async Task ValidSubmit(EditContext formContext)
    {
        uifloatselection = (UIFloatSelection)formContext.Model;

        try
        {
            // Console.WriteLine($"Data : {UIFloatSelection.CategoryId}");
            // Console.WriteLine($"Data : {UIFloatSelection.ItemName1}");
            // Console.WriteLine($"Data : {UIFloatSelection.ItemName2}");
            // Console.WriteLine($"Data : {UIFloatSelection.ItemName3}");
            // Console.WriteLine($"Data : {UIFloatSelection.ItemName4}");
            var obj = await HttpClient.PostAsJsonAsync($"FloatSelection", uifloatselection);
            // Console.WriteLine(obj);
            UIFloatSelection = new();


        }
        catch (Exception ex)
        {

            Console.WriteLine(ex.Message.ToString());
        }
        //return null;
    }

}
